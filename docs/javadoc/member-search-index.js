memberSearchIndex = [{"p":"board","c":"StateManager","l":"actOnClick(int, int)","u":"actOnClick(int,int)"},{"p":"board","c":"Aquarium","l":"addSquare(Square)","u":"addSquare(board.Square)"},{"p":"board","c":"Level","l":"addSquare(Square)","u":"addSquare(board.Square)"},{"p":"graph","c":"AStar","l":"AStar()","u":"%3Cinit%3E()"},{"p":"board","c":"StateManager","l":"board"},{"p":"graph","c":"BreathFirst","l":"BreathFirst()","u":"%3Cinit%3E()"},{"p":"board","c":"StateManager","l":"changeLevel(String, List<Integer>, List<Integer>)","u":"changeLevel(java.lang.String,java.util.List,java.util.List)"},{"p":"graph","c":"AStar","l":"compare(ProvState, ProvState)","u":"compare(board.ProvState,board.ProvState)"},{"p":"graph","c":"BreathFirst","l":"compare(ProvState, ProvState)","u":"compare(board.ProvState,board.ProvState)"},{"p":"graph","c":"DepthFirst","l":"compare(ProvState, ProvState)","u":"compare(board.ProvState,board.ProvState)"},{"p":"graph","c":"Greedy","l":"compare(ProvState, ProvState)","u":"compare(board.ProvState,board.ProvState)"},{"p":"graph","c":"UniformCost","l":"compare(ProvState, ProvState)","u":"compare(board.ProvState,board.ProvState)"},{"p":"board","c":"State","l":"copy()"},{"p":"graph","c":"DepthFirst","l":"DepthFirst()","u":"%3Cinit%3E()"},{"p":"board","c":"State","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"board","c":"Square","l":"getAquariumIdentifier()"},{"p":"board","c":"State","l":"getAquariums()"},{"p":"board","c":"PredefinedProblem","l":"getBoardString()"},{"p":"board","c":"Square","l":"getCmdOutput()"},{"p":"graph","c":"Graph","l":"getComparator()"},{"p":"board","c":"StateManager","l":"getCurrentState()"},{"p":"board","c":"ProvState","l":"getDepth()"},{"p":"board","c":"State","l":"getDepth()"},{"p":"graph","c":"Graph","l":"getExploredStates()"},{"p":"board","c":"PredefinedProblem","l":"getH()"},{"p":"board","c":"ProvState","l":"getHeuristic()"},{"p":"board","c":"State","l":"getHeuristic()"},{"p":"board","c":"StateManager","l":"getHorizontalCount()"},{"p":"board","c":"StateManager","l":"getLeftSquares(List<Integer>, List<Integer>)","u":"getLeftSquares(java.util.List,java.util.List)"},{"p":"board","c":"Aquarium","l":"getLevels()"},{"p":"board","c":"State","l":"getMatrix()"},{"p":"board","c":"Aquarium","l":"getNotPainted()"},{"p":"board","c":"Level","l":"getNSquares()"},{"p":"board","c":"StateManager","l":"getSolution()"},{"p":"board","c":"StateManager","l":"getSolver()"},{"p":"board","c":"Level","l":"getSquares()"},{"p":"board","c":"State","l":"getSquaresLeft(List<Integer>, List<Integer>)","u":"getSquaresLeft(java.util.List,java.util.List)"},{"p":"board","c":"ProvState","l":"getState()"},{"p":"board","c":"State","l":"getState()"},{"p":"board","c":"State","l":"getState2()"},{"p":"board","c":"State","l":"getUK()"},{"p":"board","c":"PredefinedProblem","l":"getV()"},{"p":"board","c":"StateManager","l":"getVerticalCount()"},{"p":"board","c":"Square","l":"getY()"},{"p":"board","c":"StateManager","l":"giveHint()"},{"p":"board","c":"StateManager","l":"giveSolution()"},{"p":"graph","c":"Graph","l":"Graph(Order, List<Integer>, List<Integer>)","u":"%3Cinit%3E(graph.Order,java.util.List,java.util.List)"},{"p":"graph","c":"Greedy","l":"Greedy()","u":"%3Cinit%3E()"},{"p":"board","c":"StateManager","l":"height"},{"p":"board","c":"StateManager","l":"horizontalCount"},{"p":"board","c":"State","l":"increaseDepth()"},{"p":"board","c":"State","l":"isFinished(List<Integer>, List<Integer>)","u":"isFinished(java.util.List,java.util.List)"},{"p":"board","c":"Level","l":"isPainted()"},{"p":"board","c":"Square","l":"isPainted()"},{"p":"board","c":"Level","l":"Level(Level)","u":"%3Cinit%3E(board.Level)"},{"p":"<Unnamed>","c":"App","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"graph","c":"AStar","l":"name()"},{"p":"graph","c":"BreathFirst","l":"name()"},{"p":"graph","c":"DepthFirst","l":"name()"},{"p":"graph","c":"Greedy","l":"name()"},{"p":"graph","c":"Order","l":"name()"},{"p":"graph","c":"UniformCost","l":"name()"},{"p":"board","c":"Level","l":"paint()"},{"p":"board","c":"Square","l":"paint()"},{"p":"board","c":"State","l":"paint(int, int)","u":"paint(int,int)"},{"p":"board","c":"PredefinedProblem","l":"PredefinedProblem(List<Integer>, List<Integer>, String)","u":"%3Cinit%3E(java.util.List,java.util.List,java.lang.String)"},{"p":"board","c":"Aquarium","l":"process()"},{"p":"board","c":"ProvState","l":"ProvState(List<int[]>, int, int)","u":"%3Cinit%3E(java.util.List,int,int)"},{"p":"board","c":"StateManager","l":"reachedToTheSolution()"},{"p":"board","c":"StateManager","l":"readBoard(String)","u":"readBoard(java.lang.String)"},{"p":"<Unnamed>","c":"App","l":"readProblems(List<PredefinedProblem>)","u":"readProblems(java.util.List)"},{"p":"UI","c":"View","l":"reload()"},{"p":"board","c":"State","l":"reset()"},{"p":"board","c":"StateManager","l":"reset()"},{"p":"board","c":"StateManager","l":"restartBoard()"},{"p":"board","c":"Square","l":"setAquariumIdentifier(int)"},{"p":"graph","c":"AStar","l":"setCostAndHeuristic(State, List<Integer>, List<Integer>)","u":"setCostAndHeuristic(board.State,java.util.List,java.util.List)"},{"p":"graph","c":"BreathFirst","l":"setCostAndHeuristic(State, List<Integer>, List<Integer>)","u":"setCostAndHeuristic(board.State,java.util.List,java.util.List)"},{"p":"graph","c":"DepthFirst","l":"setCostAndHeuristic(State, List<Integer>, List<Integer>)","u":"setCostAndHeuristic(board.State,java.util.List,java.util.List)"},{"p":"graph","c":"Greedy","l":"setCostAndHeuristic(State, List<Integer>, List<Integer>)","u":"setCostAndHeuristic(board.State,java.util.List,java.util.List)"},{"p":"graph","c":"Order","l":"setCostAndHeuristic(State, List<Integer>, List<Integer>)","u":"setCostAndHeuristic(board.State,java.util.List,java.util.List)"},{"p":"graph","c":"UniformCost","l":"setCostAndHeuristic(State, List<Integer>, List<Integer>)","u":"setCostAndHeuristic(board.State,java.util.List,java.util.List)"},{"p":"board","c":"State","l":"setDepth(int)"},{"p":"board","c":"State","l":"setSol(List<int[]>)","u":"setSol(java.util.List)"},{"p":"board","c":"State","l":"setSol2(List<Aquarium>)","u":"setSol2(java.util.List)"},{"p":"board","c":"Aquarium","l":"size()"},{"p":"board","c":"Level","l":"size()"},{"p":"board","c":"State","l":"size()"},{"p":"board","c":"StateManager","l":"solve()"},{"p":"graph","c":"Graph","l":"solve(State)","u":"solve(board.State)"},{"p":"graph","c":"Graph","l":"solveIterativeDeepening(State)","u":"solveIterativeDeepening(board.State)"},{"p":"board","c":"Square","l":"Square(int, boolean, int)","u":"%3Cinit%3E(int,boolean,int)"},{"p":"board","c":"Aquarium","l":"squareIsClicked(Square)","u":"squareIsClicked(board.Square)"},{"p":"board","c":"State","l":"State(List<List<Square>>, List<Aquarium>, int)","u":"%3Cinit%3E(java.util.List,java.util.List,int)"},{"p":"board","c":"StateManager","l":"StateManager(int, int, List<Integer>, List<Integer>, Order)","u":"%3Cinit%3E(int,int,java.util.List,java.util.List,graph.Order)"},{"p":"graph","c":"UniformCost","l":"UniformCost()","u":"%3Cinit%3E()"},{"p":"board","c":"Level","l":"unpaint()"},{"p":"board","c":"Square","l":"unpaint()"},{"p":"board","c":"Aquarium","l":"unpaintDownTo(int)"},{"p":"board","c":"State","l":"updateCostAndHeuristic(List<Integer>, List<Integer>)","u":"updateCostAndHeuristic(java.util.List,java.util.List)"},{"p":"board","c":"State","l":"updateDepth(List<Integer>, List<Integer>)","u":"updateDepth(java.util.List,java.util.List)"},{"p":"board","c":"State","l":"updateHeuristic(List<Integer>, List<Integer>)","u":"updateHeuristic(java.util.List,java.util.List)"},{"p":"board","c":"StateManager","l":"verticalCount"},{"p":"UI","c":"View","l":"View(int, int, StateManager, State, List<PredefinedProblem>)","u":"%3Cinit%3E(int,int,board.StateManager,board.State,java.util.List)"},{"p":"board","c":"StateManager","l":"width"}];updateSearchResults();